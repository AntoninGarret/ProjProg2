type point = {x : float ; y : float};;
type triangle = {p1 : point ; p2 : point ; p3 : point};;
type point_set = point list;;
type triangle_set = triangle list;;

let rec random nb max_x max_y = match nb with
  |0->[]
  |_->{x=float(Random.int(max_x));y=float(Random.int(max_y))}::(random (nb-1) max_x max_y);;

let del_first_column mat =
  let n = Array.length mat in
  let a = Array.make_matrix n (n-1) 0. in
  for i = 0 to n-1 do 
    a.(i)<-Array.sub mat.(i) 1 (n-1)
  done;
  a;;

let del_line i mat =
  let n = Array.length mat in
  let a = Array.make_matrix (n-1) (n-1) 0. in
  for j=0 to i-1 do
    a.(j)<-mat.(j)
  done;
  for j=i to n-2 do
    a.(j)<-mat.(j+1)
  done;
  a;;

let rec det mat = match Array.length mat with
  |1-> mat.(0).(0)
  |n-> let r = ref 0. in
       for i = 0 to n-1 do
	 if i mod 2 = 0 then 
	   r:= !r+.mat.(i).(0)*.det (del_line i (del_first_column mat))
	 else
	   r:= !r-.mat.(i).(0)*.det (del_line i (del_first_column mat))
       done;
       !r;;

let ccw a b c = 
  det [|[|b.x-.a.x;c.x-.a.x|];[|b.y-.a.y;c.y-.a.y|]|] >= 0 ;;

let in_circle triangle point = 
  let p1=triangle.p1 and p2=triangle.p2 and p3=triangle.p3 in
  let mat1 = [|[|p1.x;p1.y;p1.**2.+.p1.y**2.;1.|];
	       [|p2.x;p1.y;p2.**2.+.p2.y**2.;1.|];
	       [|p3.x;p3.y;p3.**2.+.p3.y**2.;1.|];
	       [|point.x;point.y;p1.**2.+.point.y**2.;1.|]|] in
  let mat2=
